<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from imhist.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="imhist" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>imhist</refname>
    <refpurpose>get the histogram of an image</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Syntax</title>
   <synopsis>
   [counts, cells] = imhist(im)
   [counts, cells] = imhist(im, bins)
   [counts, cells] = imhist(im, bins [,width [,color]])
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>im :</term>
      <listitem><para> An image, which can be a boolean, uint8 , int8 , uint16 , int16 , int32 or double image.</para></listitem></varlistentry>
   <varlistentry><term>bins :</term>
      <listitem><para> The number of bins of the histogram. If bins is not specified, the function will used default value which determined by the image type: 2 for boolen, 2^8 for uint8 and int8, 2^16 for uint16 and int16, 2^16 for int32 (2^32 will need huge computer memory), and 10 for double.</para></listitem></varlistentry>
   <varlistentry><term>width :</term>
      <listitem><para> This argument will be sent to bar function. It is a real scalar, defines the width (a percentage of the available room) for the bar (default: 0.8, i.e 80%).</para></listitem></varlistentry>
   <varlistentry><term>color :</term>
      <listitem><para> This argument will be sent to bar function. It is a string (default: 'blue'), specifing the inside color bar.</para></listitem></varlistentry>
   <varlistentry><term>counts :</term>
      <listitem><para> the returned histogram.</para></listitem></varlistentry>
   <varlistentry><term>cells :</term>
      <listitem><para> the intervals for bins.</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
imhist return the histogram of an image. If more than 2 arguments are give, the histogram will be shown in a figure.
   </para>
   <para>
If step is the step of scalar cells (cells(i+1)=cells(i)+step), the i'th bin is half-open interval (cells(i)-step/2, cells(i)+step/2] for i &gt; 1, and [cells(1)-step/2, cells(1)+step/2] for i=1.
   </para>
   <para>
If more than 2 arguments are given, the function will call bar(cells, counts, ...) and send rest arguments to bar function to display the histogram.
   </para>
   <para>
Supported image type
BOOLEAN, UINT8, INT8, UINT16, INT16, INT32, DOUBLE.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
im = imread(fullpath(getIPCVpath() + "/images/baboon.png"));
im = rgb2gray(im);
[count, cells]=imhist(im);
[count, cells]=imhist(im, 10);
scf(0); imhist(im, 10, '');
scf(1); imhist(im, 10, 0.5);
scf(2); imhist(im, 10, 'green');
scf(3); imhist(im, 10, 0.8, 'green');

   ]]></programlisting>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="mean2">mean2</link></member>
   <member><link linkend="corr2">corr2</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Shiqi Yu</member>
   <member>Tan Chin Luh</member>
   </simplelist>
</refsection>
</refentry>
