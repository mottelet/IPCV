<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from imdeconvsobolev.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="imdeconvsobolev" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>imdeconvsobolev</refname>
    <refpurpose>Deconvolution by Sobolev Regularization</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Syntax</title>
   <synopsis>
   imout = imdeconvsobolev(imin,psf,lambda)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>imin :</term>
      <listitem><para> Source Image</para></listitem></varlistentry>
   <varlistentry><term>f :</term>
      <listitem><para> Blur function</para></listitem></varlistentry>
   <varlistentry><term>lamda :</term>
      <listitem><para> Regularization parameter</para></listitem></varlistentry>
   <varlistentry><term>imout :</term>
      <listitem><para> Deblurred Image</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
L2 regularization did not perform any denoising. To remove some noise,
we can penalize high frequencies using Sobolev regularization (quadratic grow).
   </para>
   <para>
The Sobolev prior reads (note the conversion from spacial domain to Fourier domain)
<para><latex> $[J(f) = \sum_x \|\nabla f(x)\|^2 = \sum_{\omega} S(\omega) \|\hat f(\omega)\|^2 ] where S(\omega)=\|\omega\|^2)$</latex></para>
   </para>
   <para>
Since this prior can be written over the Fourier domain, one can compute the
solution to the deblurring with Sobolev prior simply with the Fourier coefficients:
<para><latex>$[\hat f^\star(\omega) = \frac{\hat y(\omega) \hat h(\omega)}{ \|\hat h(\omega)\|^2 + \lambda S(\omega) }]$</latex></para>
Compute the Sobolev prior penalty S (rescale to [0,1]).
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
S = imread(fullpath(getIPCVpath() + "/images/balloons_gray.png"));
S = im2double(S);
h = fspecial('motion',25,45);
S2 = imfilter(S,h,'circular');
imshow(S2);
S3 = imdeconvsobolev(S2,h,0);
figure;imshow(S3);

   ]]></programlisting>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="imdeconvl2">imdeconvl2</link></member>
   <member><link linkend="imdeconvwiener">imdeconvwiener</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Tan Chin Luh</member>
   </simplelist>
</refsection>

<refsection>
   <title>Bibliography</title>
   <para>1. Advanced Signal, Image and Surface Processing, Ceremade, Universit√© Paris-Dauphine</para>
</refsection>
</refentry>
