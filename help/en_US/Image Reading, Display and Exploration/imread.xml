<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from imread.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="imread" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>imread</refname>
    <refpurpose>Reads image file - Add modes support</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Syntax</title>
   <synopsis>
   im = imread(filename)
   im = imread(filename,modes)
   im = imread(url)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
        <varlistentry>
            <term>filename,url :</term>
            <listitem><para> A string, the image filename or a valid URL to be read. For the case of URL, the full syntax must be used. For example, "https://gitlab.com/uploads/-/system/project/avatar/3330423/puffin.png".</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>modes :</term>
            <listitem><para> imread mode to be specified for different image format</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>im :</term>
            <listitem><para> All images will be converted to gray images or RGB images. For gray images, this is a MxN unsigned char matrix; For RGB images, this is a MxNx3 unsigned char matrix.</para></listitem>
        </varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
imread reads many types of image files into Scilab. The format of the file is inferred from the extension in the filename parameter. Currently the following file formats are supported:
   </para>
   <para>
im = imread(filename)
   </para>
   <para>
reads image in filename into im matrix. If filename contains a truecolor image, im is a MxNx3 hypermatrix, so for example im(:,:,1) stands for the red channel. For gray images, im is a MxNx1 unsigned char matrix.
   </para>
   <para>
The imread mode can be controlled by setting any of these optional arguments to 1:
   </para>
   <para>
IMREAD_UNCHANGED (return the loaded image as is (with alpha channel, otherwise it gets cropped). Ignore EXIF orientation)
   </para>
   <para>
IMREAD_GRAYSCALE (convert image to the single channel grayscale image)
   </para>
   <para>
IMREAD_COLOR (convert image to the 3 channel color image)
   </para>
   <para>
IMREAD_ANYDEPTH (return 16-bit/32-bit image when the input has the corresponding depth, otherwise convert it to 8-bit)
   </para>
   <para>
IMREAD_ANYCOLOR (the image is read in any possible color format)
   </para>
   <para>
IMREAD_LOAD_GDAL (use the gdal driver for loading the image)
   </para>
   <para>
IMREAD_REDUCED_GRAYSCALE_2 (convert image to the single channel grayscale image and the image size reduced 1/2)
   </para>
   <para>
IMREAD_REDUCED_COLOR_2 (convert image to the 3 channelcolor image and the image size reduced 1/2)
   </para>
   <para>
IMREAD_REDUCED_GRAYSCALE_4 (convert image to the single channel grayscale image and the image size reduced 1/4)
   </para>
   <para>
IMREAD_REDUCED_COLOR_4 (convert image to the 3 channelcolor image and the image size reduced 1/4)
   </para>
   <para>
IMREAD_REDUCED_GRAYSCALE_8  (convert image to the single channel grayscale image and the image size reduced 1/8)
   </para>
   <para>
IMREAD_REDUCED_COLOR_8 (convert image to the 3 channelcolor image and the image size reduced 1/8)
   </para>
   <para>
IMREAD_IGNORE_ORIENTATION (do not rotate the image according to EXIF's orientation flag)
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
im = imread(fullpath(getIPCVpath() + "/images/" + 'baboon.png'));
imshow(im);

im = imread(fullpath(getIPCVpath() + "/images/" + 'puffin.png'),IMREAD_UNCHANGED=1);
imshow(im);
   ]]></programlisting>
</refsection>

<refsection role="see also">
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="imwrite">imwrite</link></member>
   <member><link linkend="imshow">imshow</link></member>
   <member><link linkend="imfinfo">imfinfo</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Tan Chin Luh</member>
   </simplelist>
</refsection>
</refentry>