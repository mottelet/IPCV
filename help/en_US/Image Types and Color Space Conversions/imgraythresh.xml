<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from imgraythresh.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="imgraythresh" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>imgraythresh</refname>
    <refpurpose>Calculate Otsu's Global threshold value</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Syntax</title>
   <synopsis>
   level = imgraythresh (I)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>I :</term>
      <listitem><para> Source Image</para></listitem></varlistentry>
   <varlistentry><term>level :</term>
      <listitem><para> Otsu's threshold value</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
The function uses Otsu's method, which chooses the threshold to
minimize the intraclass variance of the black and white pixels.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
S = imread(fullpath(getIPCVpath() + "/images/three_objects.png"));
th = imgraythresh(S);
S2 = im2bw(S,th);
figure(); imshow(S2);

   ]]></programlisting>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="im2bw">im2bw</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Barre-Piquot (Octave)</member>
   <member>Tan Chin Luh (IPCV)</member>
   </simplelist>
</refsection>
</refentry>
