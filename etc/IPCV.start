//=============================================================================
// IPCV - Scilab Image Processing and Computer Vision toolbox
// Copyright (C) 2017  Tan Chin Luh
// Copyright (C) 2023-2025 - UTC - St√©phane Mottelet
//=============================================================================
//
function ipcvlib = startModule()

    TOOLBOX_NAME  = "IPCV"
    TOOLBOX_TITLE = "Image Processing and Computer Vision Toolbox for Scilab";

    etc_tlbx  = get_absolute_file_path("IPCV.start");
    etc_tlbx  = getshortpathname(etc_tlbx);
    root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

    mprintf("Start %s %s: ",TOOLBOX_NAME,mgetl(fullfile(root_tlbx,"VERSION")));

    if isdef("ipcvlib") then
        warning(TOOLBOX_NAME + " library is already loaded");
        return;
    end

    //Load  functions library
    // =============================================================================
    mprintf("load macros");
    pathmacros = pathconvert( root_tlbx ) + "macros" + filesep();
    ipcvlib = lib(pathmacros);

    verboseMode = ilib_verbose();
    ilib_verbose(0);

    // load dependencies
    // =============================================================================
    // load dependencies on OpenCV
    mprintf(", dependencies");
    OPENCV_LIBS = ['opencv_world'];

    bDepsLoaded = %t;
    bNonfLoaded = %t;

    if getos() <> 'Windows' then // Darwin, Linux

        exec(etc_tlbx+'IPCV_unix.sci');
        IPCV_unix(root_tlbx,OPENCV_LIBS);

    end

    // load gateways
    // =============================================================================
    mprintf(", gateways");
    
    exec(pathconvert(root_tlbx + "/sci_gateway/loader_gateway.sce", %f));

    ilib_verbose(verboseMode);

    // Load and add help chapter
    // =============================================================================
    if or(getscilabmode() == ["NW";"STD"]) then
        mprintf(", help");
        path_addchapter = pathconvert(root_tlbx+"/jar");
        if ( isdir(path_addchapter) <> [] ) then
            add_help_chapter(TOOLBOX_TITLE, path_addchapter, %F);
        end
    end

    // Load demos
    // =============================================================================
    if or(getscilabmode() == ["NW";"STD"]) then
        mprintf(", demos.");
        pathdemos = pathconvert(root_tlbx+"/demos/ipcv.dem.gateway.sce",%F,%T);
        add_demo("IPCV",pathdemos);
    end

    ipcv_init(root_tlbx);

endfunction
// =============================================================================

if isdef("ipcvlib") then
    warning(" IPCV library is already loaded");
    return;
else
    ipcvlib = startModule();
    clear startModule; // remove startModule on stack

end
// =============================================================================